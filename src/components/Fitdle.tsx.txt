"use client";

import { useState } from "react";
import { Button } from "@/components/ui/button";
import { motion } from "framer-motion";

interface Exercise {
  name: string;
  muscle: "CORE" | "LEGS" | "UPPER BODY";
}

interface HistoryEntry {
  guess: string;
  letterFeedback: string[];
  muscleFeedback: string;
}

const exercises: Exercise[] = [
  { name: "PLANK", muscle: "CORE" },
  { name: "SQUAT", muscle: "LEGS" },
  { name: "LUNGE", muscle: "LEGS" },
  { name: "CURLS", muscle: "UPPER BODY" },
  { name: "PRESS", muscle: "UPPER BODY" },
];

const targetExercise = exercises[Math.floor(Math.random() * exercises.length)];

export default function Fitdle() {
  const [guess, setGuess] = useState<string>("");
  const [history, setHistory] = useState<HistoryEntry[]>([]);
  const [streak, setStreak] = useState<number>(0);
  const progress = (history.length / 6) * 100;

  const checkGuess = () => {
    if (guess.length !== 5) return;
    const guessUpper = guess.toUpperCase();
    const found = exercises.find((ex) => ex.name === guessUpper);

    if (!found) return alert("Invalid Exercise!");

    const letterFeedback = guessUpper.split("").map((char, i) =>
      char === targetExercise.name[i]
        ? "üü©"
        : targetExercise.name.includes(char)
        ? "üü®"
        : "‚¨ú"
    );

    let muscleFeedback = "üî¥";
    if (found.muscle === targetExercise.muscle) muscleFeedback = "üü¢";
    else if (
      ["CORE", "UPPER BODY"].includes(found.muscle) &&
      ["CORE", "UPPER BODY"].includes(targetExercise.muscle)
    )
      muscleFeedback = "üü°";

    setHistory([...history, { guess: guessUpper, letterFeedback, muscleFeedback }]);
    setGuess("");

    if (guessUpper === targetExercise.name) {
      setStreak(streak + 1);
    } else {
      setStreak(0);
    }
  };

  return (
    <div className="flex flex-col items-center gap-4 p-4">
      <h1 className="text-2xl font-bold">Fitdle üèãÔ∏è‚Äç‚ôÇÔ∏è</h1>
      <p>Guess the workout exercise!</p>

      <motion.div className="w-full max-w-sm bg-gray-200 rounded-full h-2 overflow-hidden">
        <motion.div
          className="bg-green-500 h-2"
          initial={{ width: 0 }}
          animate={{ width: `${progress}%` }}
          transition={{ duration: 0.5 }}
        />
      </motion.div>

      <p className="text-lg font-semibold">üî• Streak: {streak}</p>

      <input
        className="border p-2 text-center uppercase"
        value={guess}
        onChange={(e) => setGuess(e.target.value)}
        maxLength={5}
      />
      <Button onClick={checkGuess}>Submit</Button>

      <div className="flex flex-col gap-2 w-full max-w-sm">
        {history.map((entry, i) => (
          <motion.div
            key={i}
            className="flex justify-between p-2 border rounded"
            initial={{ opacity: 0, y: -10 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.3, delay: i * 0.1 }}
          >
            <span className="font-mono">{entry.guess}</span>
            <span>{entry.letterFeedback.join(" ")}</span>
            <span>{entry.muscleFeedback}</span>
          </motion.div>
        ))}
      </div>
    </div>
  );
}
